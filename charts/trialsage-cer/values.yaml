# Default values for trialsage-cer Helm chart
# This is a YAML-formatted file.

# Global settings
global:
  nameOverride: ""
  fullnameOverride: ""
  environment: production
  
  # Security contexts
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

# API Server configuration
api:
  enabled: true
  replicaCount: 2
  image:
    repository: trialsage/cer-api
    tag: "latest"
    pullPolicy: Always
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  
  containerPorts:
    http: 4000
    metrics: 9090
  
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  
  service:
    type: ClusterIP
    port: 80
    metricsPort: 9090
  
  ingress:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: cer.trialsage.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: cer-tls
        hosts:
          - cer.trialsage.com
  
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"

# Worker configuration
worker:
  enabled: true
  replicaCount: 2
  image:
    repository: trialsage/cer-worker
    tag: "latest"
    pullPolicy: Always
  
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 500m
      memory: 512Mi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 70
  
  containerPorts:
    http: 3001
    metrics: 9091
  
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  
  service:
    type: ClusterIP
    port: 3001
    metricsPort: 9091
  
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
    prometheus.io/path: "/metrics"

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    username: trialsage
    password: ""  # Will be auto-generated if not provided
    database: cer
  primary:
    persistence:
      enabled: true
      size: 10Gi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# Redis configuration
redis:
  enabled: true
  auth:
    password: ""  # Will be auto-generated if not provided
  master:
    persistence:
      enabled: true
      size: 8Gi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# Storage for PDF files
storage:
  enabled: true
  provider: s3  # s3, azure, gcp
  persistentVolume:
    enabled: false
    size: 50Gi
    storageClass: ""
  s3:
    bucket: trialsage-cer-pdfs
    region: us-east-1
  
# Monitoring and observability
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    selector:
      release: prometheus
  prometheusRules:
    enabled: true
    rules:
      - alert: HighErrorRate
        expr: sum(rate(trialsage_cer_job_errors_total[5m])) / sum(rate(trialsage_cer_jobs_total[5m])) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate in CER jobs"
          description: "Error rate is above 10% for CER job processing"
      - alert: LongRunningJobs
        expr: max(trialsage_cer_job_duration_seconds) > 1800
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Jobs taking too long to complete"
          description: "CER jobs are taking more than 30 minutes to complete"

# Security and RBAC settings
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods", "services", "configmaps", "secrets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["batch"]
      resources: ["jobs"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Secrets management
secrets:
  create: true
  annotations:
    example.com/key: value
  stringData:
    jwt_secret: ""  # Will be auto-generated if not provided
    aws_access_key: ""
    aws_secret_key: ""

# ConfigMap for application configuration
configMaps:
  app:
    create: true
    data:
      NODE_ENV: "production"
      LOG_LEVEL: "info"
      API_BASE_URL: "https://cer.trialsage.com"
      MAX_BROWSER_INSTANCES: "2"