Let’s get your Client Portal fully restored—no frills, just the exact steps to follow in Replit:

---

## 1. Confirm Your Components Are in Place

In the **Explor­er panel**, expand:

```
client/src/components/client-portal/
```

You should see:

* `ClientHeader.jsx`
* `OrganizationSwitcher.jsx`
* `ClientContextBar.jsx`
* `ClientDashboard.jsx`
* `ClientPortalLanding.jsx`
* **(Check for) ClientPortal.jsx**

If **ClientPortal.jsx** is missing or empty, create it now as a placeholder.

---

## 2. Wire Up the Main Portal Wrapper

1. **Open** `client/src/components/client-portal/ClientPortal.jsx`
2. **Basic structure** (in plain English):

   * Render **ClientHeader** at the top
   * Below it, render **ClientContextBar**
   * Then, if no client is selected show **ClientPortalLanding**, otherwise show **ClientDashboard**

> You don’t need code here—just ensure your file follows that layout order.

---

## 3. Hook Your Router to the Portal

1. **Open** your routing file (`App.jsx`, `Routes.jsx`, or wherever your `<Route>` definitions live).
2. **Add or update** the route for the portal path to point at `ClientPortal`—for example:

   ```
   <Route path="/client-portal/*" element={<ClientPortal />} />
   ```
3. **Remove** any other routes that bypass `ClientPortal` and go straight to `ClientDashboard` or `ClientPortalLanding`.

---

## 4. Verify Context & Selection Flow

1. Click **“Client Portal”** in your sidebar or navigate to `/client-portal` in the browser.
2. You should see the **header** and **context bar** render immediately.
3. Use the **Organization** and **Client** dropdowns in the header—watch the context bar update.
4. Once a client is chosen, the **landing screen** should swap out for the **dashboard view**.

---

## 5. Final Smoke-Test

* **No organization selected** → you remain on the landing panel
* **Organization selected, no client** → landing panel with context bar info
* **Both selected** → full dashboard appears
* **Re-load the page** at `/client-portal` and at `/client-portal/dashboard` to ensure stability

If at any point you still see a blank screen or the wrong component, retrace which component your `/client-portal` route is pointing to—make sure it’s `ClientPortal.jsx`, not a landing or dashboard file directly.

---

By following those five steps—**confirm components, assemble ClientPortal.jsx, fix routing, test context flows, and smoke-test**—your portal will come back exactly as it was, with header, context, and dashboard all working under one roof.
