// --- TrialSage Vault‚Ñ¢ Full Marketing Landing Page + Concierge AI Embedded (GA-Ready) ---

import React, { useState, useEffect, useRef } from 'react';
import { motion } from 'framer-motion';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import axios from 'axios';

export default function VaultMarketingPage() {
  const [showAssistant, setShowAssistant] = useState(false);
  const [messages, setMessages] = useState([{ role: 'assistant', content: 'üëã Welcome to TrialSage Vault‚Ñ¢ ‚Äî your intelligent Clinical Document Concierge. How can I help you today? üìö' }]);
  const [input, setInput] = useState('');
  const [loading, setLoading] = useState(false);
  const chatEndRef = useRef(null);

  useEffect(() => {
    if (chatEndRef.current) chatEndRef.current.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  const sendMessage = async () => {
    if (!input.trim()) return;
    const userMessage = { role: 'user', content: input };
    setMessages(prev => [...prev, userMessage]);
    setInput('');
    setLoading(true);
    try {
      const res = await axios.post('/api/vault-assistant', { messages: [...messages, userMessage] });
      setMessages(prev => [...prev, { role: 'assistant', content: res.data.reply }]);
    } catch (error) {
      console.error('Error contacting Vault AI:', error);
      setMessages(prev => [...prev, { role: 'assistant', content: "‚ùó Sorry, I couldn't process that. Please try again later." }]);
    }
    setLoading(false);
  };

  const suggestedPrompts = [
    "What is TrialSage Vault?",
    "How does AI tagging work?",
    "Explain audit trail features",
    "Tell me about Vault compliance",
    "Request a demo"
  ];

  return (
    <div className="bg-gradient-to-b from-white to-blue-50 min-h-screen text-center p-10 relative">
      <motion.h1
        initial={{ opacity: 0, y: -40 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.7 }}
        className="text-5xl font-bold text-blue-800 mb-6"
      >
        Meet TrialSage Vault‚Ñ¢
      </motion.h1>

      <motion.p
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.5 }}
        className="text-lg text-gray-700 max-w-3xl mx-auto mb-10"
      >
        The world‚Äôs first AI-powered Clinical Document Intelligence Platform ‚Äî built for biotech speed, GxP compliance, and audit-grade control. Vault transforms passive files into active regulatory readiness.
      </motion.p>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto mb-16">
        <FeatureCard
          title="AI Auto-Tagging"
          description="Every document uploaded is intelligently tagged by trial, molecule, phase, and endpoint using GPT-4 Turbo."
        />
        <FeatureCard
          title="Executive Summaries"
          description="Instant summaries of CSRs, protocols, and CERs for better visibility, faster handoffs, and more confident decisions."
        />
        <FeatureCard
          title="Full Audit Readiness"
          description="21 CFR Part 11, HIPAA, and GDPR built in ‚Äî with tenant isolation, audit trails, and secure access controls."
        />
      </div>

      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ delay: 0.8 }}>
        <Button size="lg" className="bg-blue-700 hover:bg-blue-800 text-white px-8 py-3 rounded-xl text-lg">
          Request a Live Demo
        </Button>
      </motion.div>

      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 1 }}
        className="mt-20 text-left max-w-5xl mx-auto"
      >
        <h2 className="text-2xl font-semibold text-blue-800 mb-4">Why Vault‚Ñ¢?</h2>
        <ul className="list-disc text-gray-700 text-md space-y-2 ml-5">
          <li>Auto-categorize and summarize documents in real-time</li>
          <li>Smart Foldering aligned with IND/NDA/CTA structures</li>
          <li>AI-powered CMC and regulatory intelligence</li>
          <li>Audit logs, version control, and GxP-compliant workflows</li>
          <li>Multi-tenant SaaS security and scalability</li>
        </ul>
      </motion.div>

      <div className="mt-28 text-sm text-gray-500">
        ¬© {new Date().getFullYear()} TrialSage Vault‚Ñ¢ ‚Äî Built for Biotech.
      </div>

      {/* Vault Concierge AI Assistant */}
      <div className="fixed bottom-6 right-6 z-50">
        {!showAssistant ? (
          <Button variant="default" onClick={() => setShowAssistant(true)}>üí¨ Chat with Vault Concierge</Button>
        ) : (
          <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} className="bg-white shadow-2xl rounded-2xl w-96 h-[500px] flex flex-col">
            <div className="bg-gradient-to-r from-blue-600 to-indigo-600 text-white font-bold p-4 rounded-t-2xl">
              Vault Concierge
            </div>
            <div className="flex-1 overflow-y-auto p-4 space-y-3">
              {messages.map((msg, idx) => (
                <div key={idx} className={`text-sm ${msg.role === 'assistant' ? 'text-blue-700' : 'text-gray-800'}`}>{msg.content}</div>
              ))}
              {loading && <div className="text-blue-400 animate-pulse">Vault is thinking...</div>}
              <div ref={chatEndRef}></div>
            </div>
            <div className="p-4 border-t flex items-center gap-2">
              <Input value={input} onChange={(e) => setInput(e.target.value)} placeholder="Ask a question..." onKeyDown={(e) => e.key === 'Enter' && sendMessage()} />
              <Button size="sm" onClick={sendMessage}>Send</Button>
            </div>
            <div className="p-2 flex flex-wrap gap-2 bg-gray-50 border-t text-xs">
              {suggestedPrompts.map((prompt, idx) => (
                <Button key={idx} size="xs" variant="secondary" onClick={() => { setInput(prompt); sendMessage(); }}>{prompt}</Button>
              ))}
            </div>
          </motion.div>
        )}
      </div>
    </div>
  );
}

function FeatureCard({ title, description }) {
  return (
    <motion.div
      whileHover={{ scale: 1.05 }}
      className="bg-white p-6 shadow-lg rounded-xl border hover:border-blue-400 transition"
    >
      <h3 className="text-xl font-bold text-blue-700 mb-2">{title}</h3>
      <p className="text-gray-600 text-sm leading-relaxed">{description}</p>
    </motion.div>
  );
}
