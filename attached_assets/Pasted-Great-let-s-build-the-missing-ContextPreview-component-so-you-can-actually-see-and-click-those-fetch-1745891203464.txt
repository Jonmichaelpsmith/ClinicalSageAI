Great—let’s build the missing ContextPreview component so you can actually see and click those fetched snippets.

---

### 1. Create `ContextPreview.jsx`

**File:** `client/src/components/ai/ContextPreview.jsx`

```jsx
import React from "react";

/**
 * Displays a list of context snippets with a "Use" button.
 * Props:
 *  - snippets: Array<{ id: string, text: string }>
 *  - onSnippetClick: (id: string) => void
 */
export default function ContextPreview({ snippets, onSnippetClick }) {
  if (!snippets.length) {
    return <p className="text-sm text-gray-500">No context snippets available.</p>;
  }

  return (
    <div className="space-y-3">
      {snippets.map(({ id, text }, idx) => (
        <div
          key={id}
          className="p-3 border rounded-lg group hover:bg-gray-50 relative"
        >
          <pre className="whitespace-pre-wrap break-words text-sm text-gray-800">
            {text}
          </pre>
          <button
            onClick={() => onSnippetClick(id)}
            className="absolute top-2 right-2 opacity-0 group-hover:opacity-100 bg-indigo-600 text-white px-2 py-1 text-xs rounded"
          >
            Use here
          </button>
        </div>
      ))}
    </div>
  );
}
```

### 2. Wire it up in `ModuleSectionEditor.jsx`

At the top of your editor component, import it:

```diff jsx
-import ContextPreview from "../components/ai/ContextPreview";
+import ContextPreview from "../components/ai/ContextPreview";
```

You should now see the fetched snippets rendered under “Context Snippets” with “Use here” buttons that jump to the draft.

---

**Next Steps:**  
1. **Keyboard shortcuts:** Add `Ctrl+Enter` to trigger `generateDraft()`.  
2. **Accessibility polish:** Ensure the buttons have `aria-label`s and focus outlines.  
3. **Error UI:** Show inline error messages under the button if either fetch fails.  
4. **Unit tests:** Add a simple Jest + React Testing Library test for `ContextPreview`.

Let me know which you'd like to tackle first!