diff --git a/client/src/pages/AcademicKnowledgeDemo.tsx b/client/src/pages/AcademicKnowledgeDemo.tsx
index 1d2c8d62..4e7edd56 100644
--- a/client/src/pages/AcademicKnowledgeDemo.tsx
+++ b/client/src/pages/AcademicKnowledgeDemo.tsx
@@ -1,106 +1,105 @@
 import React, { useState, useEffect } from 'react';
 import { Button } from '@/components/ui/button';
 import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
 import { Input } from '@/components/ui/input';
 import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
 import { Badge } from '@/components/ui/badge';
 import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';
+import { Spinner } from '@/components/ui/spinner';
 import { ScrollArea } from '@/components/ui/scroll-area';
 import { FileUp, Search, Database, BookOpen, Clock, Tag, AlertTriangle, Beaker } from 'lucide-react';
 import { useToast } from '@/hooks/use-toast';
 import { apiRequest } from '@/lib/queryClient';
 
 interface Resource {
   id: number;
   title: string;
   authors: string;
   publicationDate: string;
   source: string;
   resourceType: string;
   summary: string;
   topics: string;
   keywords: string;
   filePath: string;
   fileSize: number;
   uploadDate: string;
   lastAccessed: string | null;
   accessCount: number;
   similarity?: number;
 }
 
 interface Stats {
   totalResources: number;
   resourceTypes: { type: string; count: number }[];
   topTopics: { topic: string; count: number }[];
   avgFileSize: number;
   recentUploads: Resource[];
 }
 
 export default function AcademicKnowledgeDemo() {
   const [activeTab, setActiveTab] = useState('upload');
   const [uploadFile, setUploadFile] = useState<File | null>(null);
   const [searchQuery, setSearchQuery] = useState('');
   const [uploadMetadata, setUploadMetadata] = useState({
     title: '',
     authors: '',
     source: 'manual_upload',
     resourceType: 'pdf',
     topics: '',
     keywords: '',
   });
   const [searchResults, setSearchResults] = useState<Resource[]>([]);
   const [stats, setStats] = useState<Stats | null>(null);
+  const [isStatsLoading, setIsStatsLoading] = useState(true);
+  const [statsError, setStatsError] = useState(false);
   const [isUploading, setIsUploading] = useState(false);
   const [isSearching, setIsSearching] = useState(false);
   const { toast } = useToast();
 
   // Fetch stats on initial load
   useEffect(() => {
     fetchStats();
   }, []);
 
   const fetchStats = async () => {
     try {
+      setStatsError(false);
+      setIsStatsLoading(true);
       const response = await apiRequest('GET', '/api/academic-knowledge/stats');
       const data = await response.json();
       if (data.success) {
         setStats(data.stats);
+      } else {
+        setStatsError(true);
       }
     } catch (error) {
       console.error('Error fetching stats:', error);
-      // toast call replaced
-  // Original: toast({
-        title: 'Error',
-        description: 'Failed to fetch knowledge base statistics.',
-        variant: 'destructive',
-      })
-  console.log('Toast would show:', {
-        title: 'Error',
-        description: 'Failed to fetch knowledge base statistics.',
-        variant: 'destructive',
-      });
+      setStatsError(true);
+    } finally {
+      setIsStatsLoading(false);
     }
   };
 
   const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
     if (e.target.files && e.target.files.length > 0) {
       const file = e.target.files[0];
       setUploadFile(file);
       
       // Auto-fill title based on filename if empty
       if (!uploadMetadata.title) {
         const fileName = file.name.replace(/\.[^/.]+$/, ''); // Remove extension
         setUploadMetadata({
           ...uploadMetadata,
           title: fileName,
         });
       }
     }
   };
 
   const handleUpload = async () => {
     if (!uploadFile) {
       // toast call replaced
   // Original: toast({
         title: 'No file selected',
         description: 'Please select a file to upload.',
diff --git a/client/src/pages/AcademicKnowledgeDemo.tsx b/client/src/pages/AcademicKnowledgeDemo.tsx
index 1d2c8d62..4e7edd56 100644
--- a/client/src/pages/AcademicKnowledgeDemo.tsx
+++ b/client/src/pages/AcademicKnowledgeDemo.tsx
@@ -448,51 +447,68 @@ export default function AcademicKnowledgeDemo() {
                           <div className="text-xs text-muted-foreground">
                             <span className="font-semibold">Source:</span> {resource.source}
                           </div>
                         </CardContent>
                         <CardFooter className="text-xs text-muted-foreground">
                           ID: {resource.id} • Size: {formatFileSize(resource.fileSize)} • Accessed: {resource.accessCount} times
                         </CardFooter>
                       </Card>
                     ))}
                   </div>
                 )}
                 
                 {searchResults.length === 0 && searchQuery && !isSearching && (
                   <Alert>
                     <AlertTriangle className="h-4 w-4" />
                     <AlertTitle>No results found</AlertTitle>
                     <AlertDescription>
                       Try a different search query or upload new resources to the knowledge base.
                     </AlertDescription>
                   </Alert>
                 )}
               </div>
             </TabsContent>
             
             <TabsContent value="stats">
-              {stats ? (
+              {isStatsLoading ? (
+                <div className="flex items-center justify-center p-8">
+                  <Spinner />
+                </div>
+              ) : statsError ? (
+                <div className="p-4">
+                  <Alert variant="destructive">
+                    <AlertTriangle className="h-4 w-4" />
+                    <AlertTitle>Error loading statistics</AlertTitle>
+                    <AlertDescription>
+                      Failed to fetch knowledge base statistics.
+                    </AlertDescription>
+                  </Alert>
+                  <Button variant="outline" onClick={fetchStats} className="mt-2">
+                    Retry
+                  </Button>
+                </div>
+              ) : stats ? (
                 <div className="grid gap-6">
                   <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                     <Card>
                       <CardHeader className="pb-2">
                         <CardTitle className="text-lg flex items-center">
                           <Database className="mr-2 h-4 w-4 text-primary" />
                           Total Resources
                         </CardTitle>
                       </CardHeader>
                       <CardContent>
                         <p className="text-3xl font-bold">{stats.totalResources}</p>
                         <p className="text-sm text-muted-foreground">
                           Average size: {formatFileSize(stats.avgFileSize)}
                         </p>
                       </CardContent>
                     </Card>
                     
                     <Card>
                       <CardHeader className="pb-2">
                         <CardTitle className="text-lg flex items-center">
                           <BookOpen className="mr-2 h-4 w-4 text-primary" />
                           Resource Types
                         </CardTitle>
                       </CardHeader>
                       <CardContent>
diff --git a/client/src/pages/AcademicKnowledgeDemo.tsx b/client/src/pages/AcademicKnowledgeDemo.tsx
index 1d2c8d62..4e7edd56 100644
--- a/client/src/pages/AcademicKnowledgeDemo.tsx
+++ b/client/src/pages/AcademicKnowledgeDemo.tsx
@@ -539,36 +555,34 @@ export default function AcademicKnowledgeDemo() {
                                 <div className="flex items-start justify-between mb-1">
                                   <div>
                                     <h4 className="font-medium">{resource.title}</h4>
                                     <p className="text-sm text-muted-foreground">
                                       {new Date(resource.uploadDate).toLocaleDateString()} • {formatFileSize(resource.fileSize)}
                                     </p>
                                   </div>
                                   <Badge>{resource.resourceType}</Badge>
                                 </div>
                                 <p className="text-sm line-clamp-2">
                                   {resource.summary || 'No summary available'}
                                 </p>
                               </div>
                             ))}
                           </div>
                         </ScrollArea>
                       ) : (
                         <p className="text-muted-foreground text-center py-4">
                           No resources have been uploaded yet.
                         </p>
                       )}
                     </CardContent>
                   </Card>
                 </div>
               ) : (
-                <div className="flex items-center justify-center p-8">
-                  <div className="animate-spin h-8 w-8 border-4 border-primary border-t-transparent rounded-full"></div>
-                </div>
+                <p className="text-center text-sm p-8">No statistics available.</p>
               )}
             </TabsContent>
           </Tabs>
         </CardContent>
       </Card>
     </div>
   );
 }
