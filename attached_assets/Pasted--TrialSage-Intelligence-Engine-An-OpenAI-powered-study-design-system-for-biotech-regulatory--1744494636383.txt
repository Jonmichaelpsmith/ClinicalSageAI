# ðŸ§  TrialSage Intelligence Engine

An OpenAI-powered study design system for biotech, regulatory, and biostatistics teams. Delivers protocol recommendations, IND modules, SAPs, and risk analysis based on real CSR evidence and expert GPT-4 outputs.

---

## âœ… Features
- GPT-4 Turbo assistant with thread memory
- Protocol suggestion and justification engine
- IND 2.5 / 2.7 / SAP generator with FDA-aligned formatting
- CSR document-based evidence lookup (quote-aware)
- Regulatory risk analyzer
- Weekly PDF report generator + Mailgun email delivery
- Replit-ready FastAPI backend with static asset hosting

---

## ðŸ“¦ Folder Structure
```
/trialsage/
â”œâ”€â”€ main.py                        # Entrypoint
â”œâ”€â”€ controllers/
â”‚   â”œâ”€â”€ protocol.py               # Main assistant controller
â”‚   â””â”€â”€ export.py                 # PDF export endpoint
â”œâ”€â”€ services/
â”‚   â”œâ”€â”€ openai_engine.py          # GPT-4 + assistant thread manager
â”‚   â”œâ”€â”€ report_generator.py       # Weekly email + PDF delivery
â”‚   â””â”€â”€ pdf_exporter.py           # PDF writer using FPDF
â”œâ”€â”€ models/
â”‚   â””â”€â”€ schemas.py                # Request/response model classes
â”œâ”€â”€ static/                       # Exports PDF to /static/latest_report.pdf
```

---

## ðŸš€ Getting Started on Replit
### 1. Set your environment variables in `.env`
```
OPENAI_API_KEY=sk-...
TRIALSAGE_ASSISTANT_ID=asst-...
MAILGUN_USER=postmaster@yourdomain.com
MAILGUN_PASSWORD=your-password
```

### 2. Confirm your `.replit` config:
```toml
entrypoint = "main.py"
[env]
PYTHONUNBUFFERED = "1"
[interpreter]
command = ["python3"]
```

### 3. Run the app
```bash
python main.py
```

### 4. Test endpoints
- `POST /api/intel/protocol-suggestions`
- `GET /api/intel/scheduled-report`
- `POST /api/intel/export-pdf` â†’ download `/static/latest_report.pdf`

---

## ðŸ“¬ Optional Replit Scheduler
Create a scheduled GET to:
```
https://your-replit-url/api/intel/scheduled-report
```
To generate and email briefing packets weekly.

---

## ðŸ“Ž Example: PDF Download Endpoint
```
POST /api/intel/export-pdf
Body: { "indication": "NASH" }
```
â†’ Response: `{ "download_url": "/static/latest_report.pdf" }`

---

## ðŸ”’ Notes
- All assistant logic uses OpenAI GPT-4 + Assistants API
- CSR citations can be further grounded via file upload + embeddings (future enhancement)

---

## ðŸ“Œ Status
TrialSage is now deployable, AI-complete, and Replit compatible.
Ready to power real-world biotech study design at scale.
