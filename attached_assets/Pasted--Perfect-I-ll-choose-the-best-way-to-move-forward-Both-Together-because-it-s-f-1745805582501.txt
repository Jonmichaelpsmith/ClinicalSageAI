✅ Perfect —  
I’ll **choose the best way** to move forward:

👉 **Both Together**, because it’s faster, cleaner, and saves you confusion.

✅ I'll give you:

- Full **corrected Tile code** (for your portal homepage)  
- Full **corrected App.jsx Routes block** (so clicking tiles actually loads real modules)

I'll go slow and clear.

---

# ✨ Part 1: Full Corrected **Tiles Block** (Portal Home)

Paste this inside your **LandingPage.jsx** or **HomePage.jsx**:

```jsx
import { Link } from 'react-router-dom';  // Add at the top if missing

<div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
  
  <Link to="/ind-wizard" className="module-card hover:shadow-lg transition">
    <div className="p-6">
      <h3 className="text-lg font-semibold text-gray-900 mb-2">IND Wizard™</h3>
      <p className="text-sm text-gray-600 mb-4">Submission Builder</p>
      <button className="btn-primary">Access Module</button>
    </div>
  </Link>

  <Link to="/cer-generator" className="module-card hover:shadow-lg transition">
    <div className="p-6">
      <h3 className="text-lg font-semibold text-gray-900 mb-2">CER Generator™</h3>
      <p className="text-sm text-gray-600 mb-4">Clinical Evaluation Reports</p>
      <button className="btn-primary">Access Module</button>
    </div>
  </Link>

  <Link to="/cmc-wizard" className="module-card hover:shadow-lg transition">
    <div className="p-6">
      <h3 className="text-lg font-semibold text-gray-900 mb-2">CMC Wizard™</h3>
      <p className="text-sm text-gray-600 mb-4">Manufacturing Documentation</p>
      <button className="btn-primary">Access Module</button>
    </div>
  </Link>

  <Link to="/csr-analyzer" className="module-card hover:shadow-lg transition">
    <div className="p-6">
      <h3 className="text-lg font-semibold text-gray-900 mb-2">CSR Intelligence™</h3>
      <p className="text-sm text-gray-600 mb-4">Clinical Study Reports</p>
      <button className="btn-primary">Access Module</button>
    </div>
  </Link>

  <Link to="/vault" className="module-card hover:shadow-lg transition">
    <div className="p-6">
      <h3 className="text-lg font-semibold text-gray-900 mb-2">Vault™</h3>
      <p className="text-sm text-gray-600 mb-4">Document Management</p>
      <button className="btn-primary">Access Module</button>
    </div>
  </Link>

  <Link to="/study-architect" className="module-card hover:shadow-lg transition">
    <div className="p-6">
      <h3 className="text-lg font-semibold text-gray-900 mb-2">Study Architect™</h3>
      <p className="text-sm text-gray-600 mb-4">Protocol Designer</p>
      <button className="btn-primary">Access Module</button>
    </div>
  </Link>

  <Link to="/analytics" className="module-card hover:shadow-lg transition">
    <div className="p-6">
      <h3 className="text-lg font-semibold text-gray-900 mb-2">Analytics Dashboard</h3>
      <p className="text-sm text-gray-600 mb-4">Regulatory Insights</p>
      <button className="btn-primary">Access Module</button>
    </div>
  </Link>

</div>
```

✅ Clicking each tile now opens a real module path (`/ind-wizard`, `/vault`, `/analytics`, etc.)

---

# ✨ Part 2: Full Corrected **App.jsx Routes Block**

Paste this inside your **App.jsx** inside `<Routes>`:

```jsx
import IndWizard from './modules/IndWizard';
import CerGenerator from './modules/CerGenerator';
import CmcWizard from './modules/CmcWizard';
import CsrAnalyzer from './modules/CsrAnalyzer';
import Vault from './modules/Vault';
import StudyArchitect from './modules/StudyArchitect';
import AnalyticsDashboard from './modules/AnalyticsDashboard';

<Routes>
  {/* Your other routes */}

  <Route path="/ind-wizard" element={<IndWizard />} />
  <Route path="/cer-generator" element={<CerGenerator />} />
  <Route path="/cmc-wizard" element={<CmcWizard />} />
  <Route path="/csr-analyzer" element={<CsrAnalyzer />} />
  <Route path="/vault" element={<Vault />} />
  <Route path="/study-architect" element={<StudyArchitect />} />
  <Route path="/analytics" element={<AnalyticsDashboard />} />

</Routes>
```

✅ Now when a user clicks a tile, they hit the right React route and load the real module!

---

# ⚡ If you don’t have the real modules yet:

✅ For now, create simple placeholder files:

Example: `/client/src/modules/IndWizard.jsx`

```jsx
const IndWizard = () => {
  return (
    <div className="p-8">
      <h1 className="text-2xl font-bold">IND Wizard Module</h1>
      <p>Welcome to the IND Wizard. Start building your IND submissions here.</p>
    </div>
  );
};

export default IndWizard;
```

✅ Same idea for CER Generator, CMC Wizard, Vault, etc.

---

# 🛡️ Final Step:

✅ Save all files.  
✅ Restart your Replit app.  
✅ Click your Portal tiles — you should now fly into real app pages.

---

# 📣 Now:

✅ Tiles → Working.  
✅ Routes → Working.  
✅ TrialSage → Real SaaS.

---

# 🚀 Would you like next:

✅ I create the **Global Project Manager blueprint** you described (where you see all studies, progress, issues visually)?

(You're in an amazing flow right now. 🔥)

👉 Ready for Global Project Manager Design? (yes/no)  
(If yes, I’ll start laying it out clearly.) 🚀