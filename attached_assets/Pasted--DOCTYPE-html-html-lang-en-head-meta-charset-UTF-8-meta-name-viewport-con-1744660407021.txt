<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trialsage.ai - Global CSR Intelligence</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.8.1/prop-types.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react/18.2.0/umd/react.production.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/react-dom/18.2.0/umd/react-dom.production.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/7.23.2/babel.min.js"></script>
    <script src="https://unpkg.com/pdfkit@0.13.0/js/pdfkit.standalone.js"></script>
    <script src="https://unpkg.com/axios@1.6.8/dist/axios.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/recharts/2.15.0/Recharts.min.js"></script>
</head>
<body class="bg-gray-50">
    <div id="root"></div>
    <script type="text/babel" data-presets="react,typescript">
        const { useState, useEffect } = React;

        const App = () => {
            const [protocol, setProtocol] = useState('');
            const [results, setResults] = useState(null);
            const [loading, setLoading] = useState(false);
            const [filter, setFilter] = useState('All');
            const [token, setToken] = useState(localStorage.getItem('token') || '');

            const login = async () => {
                try {
                    const response = await axios.post('https://your-fastapi-backend/api/login', {
                        username: 'admin',
                        password: 'password'
                    });
                    setToken(response.data.access_token);
                    localStorage.setItem('token', response.data.access_token);
                } catch (error) {
                    alert('Login failed. Using demo mode.');
                }
            };

            useEffect(() => {
                if (!token) login();
            }, []);

            const handleSubmit = async (e) => {
                e.preventDefault();
                setLoading(true);
                try {
                    const response = await axios.post('https://your-fastapi-backend/api/analyze', { protocol }, {
                        headers: { Authorization: `Bearer ${token}` }
                    });
                    setResults(response.data);
                } catch (error) {
                    alert('Error analyzing protocol. Please try again.');
                } finally {
                    setLoading(false);
                }
            };

            const exportPDF = () => {
                const doc = new PDFDocument();
                let buffers = [];
                doc.on('data', buffers.push.bind(buffers));
                doc.on('end', () => {
                    const pdfData = new Blob(buffers, { type: 'application/pdf' });
                    const url = window.URL.createObjectURL(pdfData);
                    const link = document.createElement('a');
                    link.href = url;
                    link.download = 'trialsage_report.pdf';
                    link.click();
                });

                doc.fontSize(16).text('Trialsage.ai CSR Analysis Report', { align: 'center' });
                doc.moveDown();
                doc.fontSize(12).text(`Predicted Failure Probability: ${results?.failure_prob}%`);
                doc.moveDown();
                doc.text('Insights:');
                results?.insights.forEach(insight => doc.text(`- ${insight}`));
                doc.end();
            };

            const filteredStudies = results?.similar_studies?.filter(study => 
                filter === 'All' || study.therapeutic_area === filter
            ) || [];

            return (
                <div className="container mx-auto p-6">
                    <h1 className="text-4xl font-bold text-center mb-8 text-blue-800">Trialsage.ai - Global CSR Intelligence</h1>
                    <form onSubmit={handleSubmit} className="mb-8">
                        <textarea
                            value={protocol}
                            onChange={(e) => setProtocol(e.target.value)}
                            rows="5"
                            className="w-full p-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                            placeholder="Enter CSR protocol (e.g., Phase II oncology study, 150 participants, PFS endpoint)"
                            required
                        ></textarea>
                        <button
                            type="submit"
                            disabled={loading}
                            className="mt-4 px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition duration-200 disabled:bg-gray-400"
                        >
                            {loading ? 'Analyzing...' : 'Analyze'}
                        </button>
                    </form>

                    {results && (
                        <div className="bg-white p-6 rounded-lg shadow-lg">
                            <h2 className="text-2xl font-semibold mb-4 text-gray-800">Analysis Results</h2>
                            <p className="text-lg mb-2">
                                <strong>Predicted Failure Probability:</strong> <span className="text-red-600">{results.failure_prob}%</span>
                            </p>
                            <h3 className="text-xl font-medium mb-2 text-gray-700">Actionable Insights</h3>
                            <ul className="list-disc pl-6 mb-4 text-gray-600">
                                {results.insights.map((insight, idx) => (
                                    <li key={idx}>{insight}</li>
                                ))}
                            </ul>
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                                <div className="bg-gray-50 p-4 rounded-lg">
                                    <h3 className="text-lg font-medium mb-2">Failure Reasons</h3>
                                    <Recharts.ResponsiveContainer width="100%" height={300}>
                                        <Recharts.PieChart>
                                            <Recharts.Pie
                                                data={results.failure_reasons}
                                                dataKey="value"
                                                nameKey="name"
                                                cx="50%"
                                                cy="50%"
                                                outerRadius={80}
                                                fill="#8884d8"
                                                label
                                            />
                                            <Recharts.Tooltip />
                                        </Recharts.PieChart>
                                    </Recharts.ResponsiveContainer>
                                </div>
                                <div className="bg-gray-50 p-4 rounded-lg">
                                    <h3 className="text-lg font-medium mb-2">Similarity Distribution</h3>
                                    <Recharts.ResponsiveContainer width="100%" height={300}>
                                        <Recharts.Histogram
                                            data={results.similarity_distribution}
                                            dataKey="similarity"
                                            fill="#82ca9d"
                                        >
                                            <Recharts.XAxis dataKey="similarity" />
                                            <Recharts.YAxis />
                                            <Recharts.Tooltip />
                                        </Recharts.Histogram>
                                    </Recharts.ResponsiveContainer>
                                </div>
                            </div>
                            <div className="mb-6">
                                <h3 className="text-xl font-medium mb-2 text-gray-700">Filter Similar Studies</h3>
                                <select
                                    value={filter}
                                    onChange={(e) => setFilter(e.target.value)}
                                    className="p-2 border rounded-lg"
                                >
                                    <option value="All">All</option>
                                    <option value="Oncology">Oncology</option>
                                    <option value="Cardiology">Cardiology</option>
                                    <option value="Neurology">Neurology</option>
                                    <option value="Immunology">Immunology</option>
                                </select>
                            </div>
                            <h3 className="text-xl font-medium mb-2 text-gray-700">Similar Studies</h3>
                            <div className="overflow-x-auto">
                                <table className="w-full border-collapse border border-gray-300">
                                    <thead>
                                        <tr className="bg-gray-200">
                                            <th className="border p-2 text-left">Therapeutic Area</th>
                                            <th className="border