# Final patch: deeply sanitize all unicode characters before writing to PDF

def hard_clean(text):
    return (
        text.replace("–", "-")
            .replace("’", "'")
            .replace("“", '"')
            .replace("”", '"')
            .replace("≥", ">=")
            .replace("•", "-")
            .replace("→", "->")
            .replace("’", "'")
            .replace("‘", "'")
    )

class CleanPDF(FPDF):
    def header(self):
        self.set_font("Arial", "B", 14)
        self.cell(0, 10, hard_clean(f"Protocol Intelligence Report - {protocol_id}"), ln=True, align="C")
        self.ln(5)

    def section(self, title, content):
        self.set_font("Arial", "B", 12)
        self.cell(0, 10, hard_clean(title), ln=True)
        self.ln(1)
        self.set_font("Arial", "", 11)
        self.multi_cell(0, 8, hard_clean(content))
        self.ln(2)

pdf = CleanPDF()
pdf.add_page()

pdf.section("Protocol Summary", f"""
- Indication: {parsed['indication']}
- Phase: {parsed['phase']}
- Sample Size: {parsed['sample_size']}
- Duration: {parsed['duration_weeks']} weeks
- Dropout Rate: {parsed['dropout_rate'] * 100:.1f}%
- Primary Endpoint: {parsed['endpoint_primary']}
""")

pdf.section("AI-Predicted Success", f"""
Original Design: {prediction * 100:.1f}%
Optimized Design: {optimized_prediction * 100:.1f}%
Expected Gain: {round((optimized_prediction - prediction) * 100, 1)}%
""")

pdf.section("Recommended Optimizations", "")
pdf.set_font("Arial", "B", 11)
pdf.cell(60, 8, "Area", border=1)
pdf.cell(70, 8, "Change", border=1)
pdf.cell(60, 8, "Why", border=1)
pdf.ln()

pdf.set_font("Arial", "", 10)
for field, change, rationale in recommendations:
    pdf.cell(60, 8, hard_clean(field), border=1)
    pdf.cell(70, 8, hard_clean(change), border=1)
    pdf.cell(60, 8, hard_clean(rationale), border=1)
    pdf.ln()

pdf.section("SAP Snippet", sap_snippet)

pdf_path = f"/mnt/data/Full_Trial_Intelligence_Report_{int(time.time())}.pdf"
pdf.output(pdf_path)

pdf_path
