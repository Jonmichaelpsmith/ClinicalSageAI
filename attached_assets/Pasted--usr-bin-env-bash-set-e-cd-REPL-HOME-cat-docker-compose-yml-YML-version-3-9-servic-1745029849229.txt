#!/usr/bin/env bash
set -e
cd "$REPL_HOME"

cat > docker-compose.yml << 'YML'
version: "3.9"

services:
  traefik:
    image: traefik:v3.0
    command:
      - "--providers.docker=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.email=admin@example.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=websecure"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"

  backend:
    build: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`{{DOMAIN}}`) && PathPrefix(`/api`)
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=le"
    env_file: .env
    depends_on: [db, redis]

  worker:
    build: .
    command: celery -A ind_automation.tasks.celery_app worker --loglevel=INFO
    env_file: .env
    depends_on: [backend, redis]

  beat:
    build: .
    command: celery -A ind_automation.tasks.celery_app beat --loglevel=INFO
    env_file: .env
    depends_on: [backend, redis]

  frontend:
    build: ./client
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`{{DOMAIN}`)"
      - "traefik.http.routers.front.entrypoints=websecure"
      - "traefik.http.routers.front.tls.certresolver=le"

  redis:
    image: redis:7-alpine
    volumes: [redis:/data]

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=changeme
    volumes: [pgdata:/var/lib/postgresql/data]

volumes:
  pgdata: {}
  redis: {}
  letsencrypt: {}
YML

# setup wizard prompts for DOMAIN and patches compose file
cat > setup.sh << 'SH'
#!/usr/bin/env bash
set -e
cp env.sample .env
read -rp "FQDN for SaaS (e.g., trialsage.acme.com): " DOMAIN
sed -i "s/{{DOMAIN}}/$DOMAIN/g" docker-compose.yml
sed -i "s/^BASE_URL=.*/BASE_URL=https:\/\/$DOMAIN/" .env
docker-compose pull
docker-compose build
printf '\nRun: docker-compose up -d\n'
SH
chmod +x setup.sh

echo "✅ TLS‑ready on‑prem stack generated.  Copy env.sample → .env, run ./setup.sh, then docker-compose up -d."
