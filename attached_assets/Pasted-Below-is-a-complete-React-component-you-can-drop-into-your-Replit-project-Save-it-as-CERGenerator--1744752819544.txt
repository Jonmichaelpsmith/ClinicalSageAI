Below is a complete React component you can drop into your Replit project. Save it as `CERGenerator.jsx` (or an equivalent file) and import/use it in your frontend. This component integrates with your FastAPI backend endpoint (`/api/cer/{ndc_code}`):

```jsx
// CERGenerator.jsx
import React, { useState } from 'react';

export default function CERGenerator() {
  const [ndcCode, setNdcCode] = useState('');
  const [cerReport, setCerReport] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const generateCER = async () => {
    setLoading(true);
    setError('');
    setCerReport('');
    try {
      const res = await fetch(`/api/cer/${ndcCode}`);
      if (!res.ok) {
        throw new Error('Failed to fetch the CER report from the server.');
      }
      const data = await res.json();
      setCerReport(data.cer_report);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ margin: '20px', fontFamily: 'Arial, sans-serif' }}>
      <h2>Clinical Evaluation Report Generator</h2>
      <input
        type="text"
        placeholder="Enter NDC Code"
        value={ndcCode}
        onChange={(e) => setNdcCode(e.target.value)}
        style={{
          padding: '10px',
          width: '300px',
          marginRight: '10px',
          borderRadius: '4px',
          border: '1px solid #ccc'
        }}
      />
      <button
        onClick={generateCER}
        style={{
          padding: '10px 20px',
          borderRadius: '4px',
          border: 'none',
          backgroundColor: '#007BFF',
          color: 'white',
          cursor: 'pointer'
        }}
      >
        {loading ? 'Generating...' : 'Generate CER'}
      </button>
      {error && (
        <div style={{ color: 'red', marginTop: '10px' }}>
          {error}
        </div>
      )}
      {cerReport && (
        <div
          style={{
            marginTop: '20px',
            whiteSpace: 'pre-wrap',
            border: '1px solid #ccc',
            padding: '10px'
          }}
        >
          {cerReport}
        </div>
      )}
    </div>
  );
}
```

### Next Steps
1. **Integrate this Component into Your Frontend:**  
   Import and render `CERGenerator` wherever it fits into your existing React application.

2. **Test the End-to-End Flow:**  
   Enter a valid NDC code in the input field, click "Generate CER", and verify that the backend returns a generated report.

Let me know when you're ready to proceed or if you need further modifications!