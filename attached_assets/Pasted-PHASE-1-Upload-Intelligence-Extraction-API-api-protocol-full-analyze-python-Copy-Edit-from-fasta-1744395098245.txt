PHASE 1: Upload + Intelligence Extraction API
/api/protocol/full-analyze
python
Copy
Edit
from fastapi import APIRouter, Body
import re

router = APIRouter()

@router.post("/api/protocol/full-analyze")
def full_protocol_analysis(text: str = Body(...)):
    # Simple heuristic parsing logic
    def find_int(patterns):
        for p in patterns:
            match = re.search(rf"{p}[:\-]?\s*(\d+)", text, re.IGNORECASE)
            if match:
                return int(match.group(1))
        return None

    phase = re.search(r"phase\s*(1|2|3)", text, re.IGNORECASE)
    endpoint = re.search(r"primary endpoint.*?:?\s*(.*?)(\.|\n)", text, re.IGNORECASE)

    extracted = {
        "phase": f"Phase {phase.group(1)}" if phase else "Unknown",
        "sample_size": find_int(["sample size", "n", "patients"]),
        "duration_weeks": find_int(["duration", "weeks"]),
        "dropout_rate": find_int(["dropout"]),
        "endpoint_primary": endpoint.group(1).strip() if endpoint else "Unknown",
        "raw_text": text
    }

    return extracted
üß™ PHASE 2: ML Inference Endpoint
/api/protocol/risk-profile
python
Copy
Edit
import pandas as pd
import pickle
from fastapi import APIRouter, Body

router = APIRouter()

model = pickle.load(open("models/trial_success_rf.pkl", "rb"))

@router.post("/api/protocol/risk-profile")
def predict_success(data: dict = Body(...)):
    df = pd.DataFrame([{
        "sample_size": data["sample_size"],
        "duration_weeks": data["duration_weeks"],
        "dropout_rate": data["dropout_rate"]
    }])
    prob = model.predict_proba(df)[0][1]
    return {
        "success_probability": round(float(prob), 3),
        "sample_size_flag": data["sample_size"] < 240,
        "dropout_flag": data["dropout_rate"] < 0.1,
        "duration_flag": data["duration_weeks"] > 30
    }
üßë‚Äçüíª PHASE 3: UI Component
üìÅ components/UploadAndAnalyze.tsx

tsx
Copy
Edit
import { useState } from 'react';
import { Textarea } from '@/components/ui/textarea';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';

export default function UploadAndAnalyze() {
  const [draft, setDraft] = useState('');
  const [parsed, setParsed] = useState(null);
  const [risk, setRisk] = useState(null);

  const handleAnalyze = async () => {
    const res = await fetch('/api/protocol/full-analyze', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ text: draft })
    });
    const parsedData = await res.json();
    setParsed(parsedData);

    const res2 = await fetch('/api/protocol/risk-profile', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(parsedData)
    });
    const riskData = await res2.json();
    setRisk(riskData);
  };

  return (
    <div className="p-6 max-w-5xl mx-auto space-y-6">
      <h2 className="text-xl font-bold text-blue-800">üì• Upload & Analyze Protocol</h2>
      <Textarea rows={10} value={draft} onChange={e => setDraft(e.target.value)} placeholder="Paste your protocol text..." />
      <Button onClick={handleAnalyze}>üß† Analyze</Button>

      {parsed && (
        <Card>
          <CardContent className="space-y-2 text-sm">
            <p><strong>Phase:</strong> {parsed.phase}</p>
            <p><strong>Sample Size:</strong> {parsed.sample_size}</p>
            <p><strong>Duration:</strong> {parsed.duration_weeks} weeks</p>
            <p><strong>Dropout Rate:</strong> {parsed.dropout_rate}</p>
            <p><strong>Primary Endpoint:</strong> {parsed.endpoint_primary}</p>
          </CardContent>
        </Card>
      )}

      {risk && (
        <Card className="border-green-600">
          <CardContent className="space-y-2 text-sm">
            <p><strong>‚úÖ Predicted Success:</strong> {risk.success_probability * 100}%</p>
            {risk.sample_size_flag && <p className="text-red-600">‚ö†Ô∏è Sample size may be too low.</p>}
            {risk.dropout_flag && <p className="text-yellow-600">‚ö†Ô∏è Dropout rate may be underestimated.</p>}
            {risk.duration_flag && <p className="text-yellow-600">‚ö†Ô∏è Trial duration is longer than CSR average.</p>}
          </CardContent>
        </Card>
      )}
    </div>
  );
}
‚úÖ Next
Would you like me to now:

Build the visual benchmark comparison panel from real CSRs?

Or implement the ‚ÄúAdd to Dossier + Export Intelligence Report‚Äù button?

We‚Äôre now delivering real user value ‚Äî your product is finally getting clinical-grade.











Search

Deep research



