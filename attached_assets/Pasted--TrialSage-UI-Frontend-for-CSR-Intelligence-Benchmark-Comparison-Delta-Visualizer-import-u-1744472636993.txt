// TrialSage UI - Frontend for CSR Intelligence + Benchmark Comparison + Delta Visualizer
import { useState } from 'react';
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";

export default function TrialSageCSRSearch() {
  const [query, setQuery] = useState("");
  const [results, setResults] = useState([]);
  const [summary, setSummary] = useState("");
  const [comparison, setComparison] = useState([]);
  const [delta, setDelta] = useState(null);
  const [loading, setLoading] = useState(false);

  const handleSearch = async () => {
    setLoading(true);
    const res = await fetch(`/api/csrs/search/?query=${encodeURIComponent(query)}`);
    const data = await res.json();
    setResults(data.results);
    setSummary("");
    setComparison([]);
    setDelta(null);
    setLoading(false);
  };

  const handleSummarize = async () => {
    setLoading(true);
    const res = await fetch(`/api/csrs/summary/?query=${encodeURIComponent(query)}`);
    const data = await res.json();
    setSummary(data.summary);
    setComparison([]);
    setDelta(null);
    setLoading(false);
  };

  const handleCompare = async () => {
    setLoading(true);
    const res = await fetch(`/api/csrs/search/?query=${encodeURIComponent(query)}`);
    const data = await res.json();
    const top = data.results.slice(0, 2);
    setComparison(top);
    setResults([]);
    setSummary("");
    setDelta(null);
    setLoading(false);
  };

  const handleDelta = async () => {
    setLoading(true);
    const res = await fetch(`/api/csrs/compare-deltas?query=${encodeURIComponent(query)}`);
    const data = await res.json();
    setDelta(data);
    setComparison([]);
    setResults([]);
    setSummary("");
    setLoading(false);
  };

  return (
    <div className="p-6 max-w-5xl mx-auto">
      <h1 className="text-2xl font-bold mb-4">TrialSage CSR Intelligence</h1>
      <Input
        value={query}
        onChange={(e) => setQuery(e.target.value)}
        placeholder="e.g., Phase 2 NASH trial endpoints with high dropout"
        className="mb-4"
      />
      <div className="flex flex-wrap gap-2 mb-6">
        <Button onClick={handleSearch}>Search Similar CSRs</Button>
        <Button onClick={handleSummarize} variant="outline">Summarize Insights</Button>
        <Button onClick={handleCompare} variant="secondary">Compare Top CSRs</Button>
        <Button onClick={handleDelta} variant="ghost">Field-Level Delta</Button>
      </div>

      {loading && <p>Loading...</p>}

      {results.length > 0 && (
        <div className="space-y-4">
          {results.map((r, i) => (
            <Card key={i}>
              <CardContent>
                <p className="text-sm text-muted-foreground">CSR #{r.id}: {r.filename}</p>
                <pre className="text-xs mt-2 whitespace-pre-wrap max-h-48 overflow-auto">{r.excerpt}</pre>
              </CardContent>
            </Card>
          ))}
        </div>
      )}

      {summary && (
        <div className="mt-8">
          <h2 className="text-xl font-semibold mb-2">AI-Generated Summary</h2>
          <Card>
            <CardContent>
              <p className="whitespace-pre-wrap text-sm text-gray-800">{summary}</p>
            </CardContent>
          </Card>
        </div>
      )}

      {comparison.length === 2 && (
        <div className="mt-8">
          <h2 className="text-xl font-semibold mb-2">Benchmark Comparison</h2>
          <div className="grid grid-cols-2 gap-4">
            {comparison.map((item, idx) => (
              <Card key={idx}>
                <CardContent>
                  <p className="text-sm font-bold text-muted-foreground">CSR #{item.id}: {item.filename}</p>
                  <pre className="text-xs mt-2 whitespace-pre-wrap max-h-64 overflow-auto">{item.excerpt}</pre>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      )}

      {delta && (
        <div className="mt-10">
          <h2 className="text-xl font-semibold mb-2">Field-Level Delta Analysis</h2>
          <Card>
            <CardContent>
              <p className="text-sm mb-2">Compared CSR #{delta.csr_ids[0]} vs. #{delta.csr_ids[1]}</p>
              <p className="text-sm font-medium text-green-700">{delta.delta.summary}</p>
              <ul className="list-disc ml-5 mt-2 text-sm">
                {delta.delta.AE_keywords.map((term, idx) => (
                  <li key={idx}>{term}</li>
                ))}
              </ul>
            </CardContent>
          </Card>
        </div>
      )}
    </div>
  );
}
