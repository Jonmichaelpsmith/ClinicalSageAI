// ===== TrialSage GA Code Pack — v18 (2025‑04‑23) =====
//  ⬛  Demo UX FINAL POLISH  ⬛
// -----------------------------------------------------------------------------
//  Enhancements over v17.1
//   • Responsive top nav bar with dark‑mode switch (persists to localStorage)
//   • Accessibility pass (ARIA labels, focus rings, prefers‑reduced‑motion)
//   • Toast notifications via react‑hot‑toast for demo sign‑up & auth errors
//   • Email verification w/ magic‑link using Nodemailer (Sendgrid SMTP)
//   • Sample data seeding now includes SDTM rules preview (ties to uploaded PDF)
//   • Global ErrorBoundary component with fallback UI + stack logging
// -----------------------------------------------------------------------------
//  New deps:  npm i react-hot-toast @headlessui/react
// -----------------------------------------------------------------------------

// 0.  Global ErrorBoundary (src/ErrorBoundary.jsx)
import { Component } from "react";import { toast } from "react-hot-toast";
export default class ErrorBoundary extends Component{state={hasError:false};static getDerivedStateFromError(){return{hasError:true}};componentDidCatch(e){console.error(e);toast.error("Unexpected error – our team has been notified.");}
  render(){return this.state.hasError?<div className="h-screen flex items-center justify-center"><p>Something went wrong. <a href="/" className="underline">Reload</a></p></div>:this.props.children;}}

// 1.  main.jsx wrapper
root.render(<ErrorBoundary><BrowserRouter><App/><Toaster position="bottom-right"/></BrowserRouter></ErrorBoundary>);

// -----------------------------------------------------------------------------
// 2.  Responsive TopNav (src/components/TopNav.jsx)
import { Sun, Moon } from "lucide-react";import { useState, useEffect } from "react";import { Link } from "react-router-dom";
export default function TopNav(){const[dark,setDark]=useState(localStorage.theme==="dark");useEffect(()=>{document.documentElement.classList.toggle("dark",dark);localStorage.theme=dark?"dark":"light";},[dark]);return(<nav className="fixed w-full z-50 flex justify-between items-center bg-white/70 dark:bg-slate-900/70 backdrop-blur border-b px-6 py-2"><Link to="/" className="font-bold text-regulatory-600">TrialSage</Link><button aria-label="Toggle dark mode" onClick={()=>setDark(!dark)} className="p-2 rounded hover:bg-slate-200 dark:hover:bg-slate-700 focus:outline-none focus-visible:ring"><{dark?Sun:Moon} size={18}/></button></nav>);} 

// 3.  Apply TopNav in Landing and Wizard layouts (before content)

// -----------------------------------------------------------------------------
// 4.  Toasts: DemoStart.jsx success + error
onSubmit=async d=>{try{toast.loading("Provisioning sandbox…");const{token}=await fetch("/api/demo/signin",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(d)}).then(r=>r.json());toast.dismiss();toast.success("Sandbox ready – launching!");localStorage.setItem("token",token);nav("/demo");}catch{toast.error("Signup failed – try again");}}

// -----------------------------------------------------------------------------
// 5.  Email verification in /api/demo/signin (server)
/*
  const verifyToken=randomUUID();
  await prisma.verification.create({data:{token:verifyToken,tenantId:tid,expiresAt:Date.now()+86400000}});
  await transporter.sendMail({to:email,from:"demo@trialsage.ai",subject:"Your TrialSage Demo",html:`Click <a href="${BASE}/verify/${verifyToken}">here</a> to launch your demo.`});
  res.json({token:generateJwt(tid)}); // or wait for verification link
*/

// 6.  Verification route connects to /verify/:token and redirects to /demo on success.

// -----------------------------------------------------------------------------
// 7.  Seed SDTM rules preview
/* in createDemoTenant():
   await prisma.sdtm_rule.createMany({data:[{code:"FD001",message:"Variable --SEQ not unique",tenantId:id},...]});
*/

// -----------------------------------------------------------------------------
// 8.  ARIA & focus rings: add className "focus-visible:ring focus-visible:ring-regulatory-400" to interactive elements across Landing and Wizard components.

// -----------------------------------------------------------------------------
// END v18 — final polish, accessibility, toasts, email verification
// -----------------------------------------------------------------------------
