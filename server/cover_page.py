#!/usr/bin/env python3
"""
LumenTrialGuide.AI Cover Page Generator
This module provides a simple, reusable function to create branded cover pages
for all exports from the platform.
"""

import datetime
from fpdf import FPDF
from typing import List, Optional

def add_cover_page(pdf: FPDF, 
                  session_id: str, 
                  title: str = "Study Intelligence Report",
                  sections: Optional[List[str]] = None):
    """
    Add a branded cover page to any PDF export
    
    Args:
        pdf: FPDF object to add the cover page to
        session_id: Unique session identifier
        title: Title of the report
        sections: Optional list of sections included in the report
    
    Returns:
        The PDF object with cover page added
    """
    pdf.add_page()
    
    # Header with company branding
    pdf.set_font("Arial", "B", 16)
    pdf.cell(200, 10, txt="LumenTrialGuide.AI", ln=True, align="C")
    
    # Report title
    pdf.set_font("Arial", "", 12)
    pdf.cell(200, 10, txt=title, ln=True, align="C")
    pdf.ln(10)
    
    # Session and timestamp info
    pdf.set_font("Arial", "", 10)
    pdf.multi_cell(0, 8, f"""
Session ID: {session_id}
Report Generated: {datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
Generated By: LumenTrialGuide.AI Intelligence Suite
""")
    
    # Add sections list if provided
    if sections:
        pdf.ln(5)
        pdf.set_font("Arial", "B", 10)
        pdf.cell(0, 10, "This report includes:", ln=True)
        
        pdf.set_font("Arial", "", 10)
        for section in sections:
            pdf.cell(10, 8, "•", ln=0)
            pdf.cell(0, 8, section, ln=True)
    # Otherwise use default sections
    else:
        pdf.ln(5)
        pdf.set_font("Arial", "B", 10)
        pdf.cell(0, 10, "This report includes:", ln=True)
        
        pdf.set_font("Arial", "", 10)
        pdf.multi_cell(0, 8, """• Molecule-based design rationale
• Risk modeling and predictive analytics
• Regulatory justification and IND output
• Assistant wisdom trace""")
    
    # Add enhanced footer with copyright and contact info
    pdf.set_y(-30)
    pdf.set_font("Arial", "I", 8)
    pdf.cell(0, 8, "Powered by LumenTrialGuide.AI - Intelligent Clinical Study Analysis", 0, 1, 'C')
    pdf.cell(0, 8, f"© {datetime.datetime.now().year} LumenTrialGuide.AI | All Rights Reserved", 0, 1, 'C')
    pdf.cell(0, 8, "Contact: support@lumentrial.ai | www.lumentrial.ai", 0, 1, 'C')
    
    return pdf

def apply_covers_to_example_reports():
    """
    Apply branded covers to all example persona reports
    """
    import os
    from pathlib import Path
    
    # Determine base directory
    if os.path.exists("/mnt/data"):
        example_dir = Path("/mnt/data/lumen_reports_backend/static/example_reports")
    else:
        example_dir = Path("data/static/example_reports")
    
    # Make sure directory exists
    os.makedirs(example_dir, exist_ok=True)
    
    # Define personas
    personas = ["ceo", "biostats", "ops", "planner", "writer", 
                "regulatory", "investor", "pi", "intelligence", "cxo"]
    
    # Create persona directories and example reports with covers
    for persona in personas:
        persona_path = example_dir / persona
        os.makedirs(persona_path, exist_ok=True)
        
        # Create example PDF with branded cover
        pdf = FPDF()
        session_id = f"{persona}_example"
        
        # Add the branded cover
        add_cover_page(
            pdf, 
            session_id=session_id, 
            title=f"LumenTrialGuide.AI {persona.upper()} Persona Report"
        )
        
        # Add example content
        pdf.add_page()
        pdf.set_font("Arial", size=11)
        pdf.multi_cell(0, 10, f"This is a demonstration report for persona: {persona}. Contents would appear here.")
        
        # Save to file
        output_path = persona_path / f"{persona}_example_report.pdf"
        pdf.output(str(output_path))
    
    return "Cover pages applied to example persona reports."

if __name__ == "__main__":
    # Run as standalone to generate example reports
    apply_covers_to_example_reports()